/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.daos;


import cn.edu.nju.teamwiki.jooq.tables.DocumentActivities;
import cn.edu.nju.teamwiki.jooq.tables.records.DocumentActivitiesRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record4;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DocumentActivitiesDao extends DAOImpl<DocumentActivitiesRecord, cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities, Record4<String, Integer, String, LocalDateTime>> {

    /**
     * Create a new DocumentActivitiesDao without any configuration
     */
    public DocumentActivitiesDao() {
        super(DocumentActivities.DOCUMENT_ACTIVITIES, cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities.class);
    }

    /**
     * Create a new DocumentActivitiesDao with an attached configuration
     */
    @Autowired
    public DocumentActivitiesDao(Configuration configuration) {
        super(DocumentActivities.DOCUMENT_ACTIVITIES, cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities.class, configuration);
    }

    @Override
    public Record4<String, Integer, String, LocalDateTime> getId(cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities object) {
        return compositeKeyRecord(object.getDocumentId(), object.getUserId(), object.getAction(), object.getTime());
    }

    /**
     * Fetch records that have <code>document_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities> fetchRangeOfDocumentId(String lowerInclusive, String upperInclusive) {
        return fetchRange(DocumentActivities.DOCUMENT_ACTIVITIES.DOCUMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>document_id IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities> fetchByDocumentId(String... values) {
        return fetch(DocumentActivities.DOCUMENT_ACTIVITIES.DOCUMENT_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(DocumentActivities.DOCUMENT_ACTIVITIES.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities> fetchByUserId(Integer... values) {
        return fetch(DocumentActivities.DOCUMENT_ACTIVITIES.USER_ID, values);
    }

    /**
     * Fetch records that have <code>action BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities> fetchRangeOfAction(String lowerInclusive, String upperInclusive) {
        return fetchRange(DocumentActivities.DOCUMENT_ACTIVITIES.ACTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>action IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities> fetchByAction(String... values) {
        return fetch(DocumentActivities.DOCUMENT_ACTIVITIES.ACTION, values);
    }

    /**
     * Fetch records that have <code>time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities> fetchRangeOfTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(DocumentActivities.DOCUMENT_ACTIVITIES.TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>time IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.DocumentActivities> fetchByTime(LocalDateTime... values) {
        return fetch(DocumentActivities.DOCUMENT_ACTIVITIES.TIME, values);
    }
}
