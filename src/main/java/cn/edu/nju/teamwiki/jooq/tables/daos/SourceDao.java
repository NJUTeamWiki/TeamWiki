/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.daos;


import cn.edu.nju.teamwiki.jooq.tables.Source;
import cn.edu.nju.teamwiki.jooq.tables.records.SourceRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class SourceDao extends DAOImpl<SourceRecord, cn.edu.nju.teamwiki.jooq.tables.pojos.Source, Integer> {

    /**
     * Create a new SourceDao without any configuration
     */
    public SourceDao() {
        super(Source.SOURCE, cn.edu.nju.teamwiki.jooq.tables.pojos.Source.class);
    }

    /**
     * Create a new SourceDao with an attached configuration
     */
    @Autowired
    public SourceDao(Configuration configuration) {
        super(Source.SOURCE, cn.edu.nju.teamwiki.jooq.tables.pojos.Source.class, configuration);
    }

    @Override
    public Integer getId(cn.edu.nju.teamwiki.jooq.tables.pojos.Source object) {
        return object.getSourceType();
    }

    /**
     * Fetch records that have <code>source_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Source> fetchRangeOfSourceType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Source.SOURCE.SOURCE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source_type IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Source> fetchBySourceType(Integer... values) {
        return fetch(Source.SOURCE.SOURCE_TYPE, values);
    }

    /**
     * Fetch a unique record that has <code>source_type = value</code>
     */
    public cn.edu.nju.teamwiki.jooq.tables.pojos.Source fetchOneBySourceType(Integer value) {
        return fetchOne(Source.SOURCE.SOURCE_TYPE, value);
    }

    /**
     * Fetch records that have <code>source_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Source> fetchRangeOfSourceName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Source.SOURCE.SOURCE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source_name IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Source> fetchBySourceName(String... values) {
        return fetch(Source.SOURCE.SOURCE_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>source_name = value</code>
     */
    public cn.edu.nju.teamwiki.jooq.tables.pojos.Source fetchOneBySourceName(String value) {
        return fetchOne(Source.SOURCE.SOURCE_NAME, value);
    }
}
