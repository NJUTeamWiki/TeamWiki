/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.daos;


import cn.edu.nju.teamwiki.jooq.tables.Announcement;
import cn.edu.nju.teamwiki.jooq.tables.records.AnnouncementRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AnnouncementDao extends DAOImpl<AnnouncementRecord, cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement, Integer> {

    /**
     * Create a new AnnouncementDao without any configuration
     */
    public AnnouncementDao() {
        super(Announcement.ANNOUNCEMENT, cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement.class);
    }

    /**
     * Create a new AnnouncementDao with an attached configuration
     */
    @Autowired
    public AnnouncementDao(Configuration configuration) {
        super(Announcement.ANNOUNCEMENT, cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement.class, configuration);
    }

    @Override
    public Integer getId(cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement object) {
        return object.getAnnouncementId();
    }

    /**
     * Fetch records that have <code>announcement_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement> fetchRangeOfAnnouncementId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Announcement.ANNOUNCEMENT.ANNOUNCEMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>announcement_id IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement> fetchByAnnouncementId(Integer... values) {
        return fetch(Announcement.ANNOUNCEMENT.ANNOUNCEMENT_ID, values);
    }

    /**
     * Fetch a unique record that has <code>announcement_id = value</code>
     */
    public cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement fetchOneByAnnouncementId(Integer value) {
        return fetchOne(Announcement.ANNOUNCEMENT.ANNOUNCEMENT_ID, value);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement> fetchRangeOfContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(Announcement.ANNOUNCEMENT.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement> fetchByContent(String... values) {
        return fetch(Announcement.ANNOUNCEMENT.CONTENT, values);
    }

    /**
     * Fetch records that have <code>publish_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement> fetchRangeOfPublishTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Announcement.ANNOUNCEMENT.PUBLISH_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>publish_time IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Announcement> fetchByPublishTime(LocalDateTime... values) {
        return fetch(Announcement.ANNOUNCEMENT.PUBLISH_TIME, values);
    }
}
