/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.daos;


import cn.edu.nju.teamwiki.jooq.tables.Portal;
import cn.edu.nju.teamwiki.jooq.tables.records.PortalRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class PortalDao extends DAOImpl<PortalRecord, cn.edu.nju.teamwiki.jooq.tables.pojos.Portal, Integer> {

    /**
     * Create a new PortalDao without any configuration
     */
    public PortalDao() {
        super(Portal.PORTAL, cn.edu.nju.teamwiki.jooq.tables.pojos.Portal.class);
    }

    /**
     * Create a new PortalDao with an attached configuration
     */
    @Autowired
    public PortalDao(Configuration configuration) {
        super(Portal.PORTAL, cn.edu.nju.teamwiki.jooq.tables.pojos.Portal.class, configuration);
    }

    @Override
    public Integer getId(cn.edu.nju.teamwiki.jooq.tables.pojos.Portal object) {
        return object.getPortalId();
    }

    /**
     * Fetch records that have <code>portal_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Portal> fetchRangeOfPortalId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Portal.PORTAL.PORTAL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>portal_id IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Portal> fetchByPortalId(Integer... values) {
        return fetch(Portal.PORTAL.PORTAL_ID, values);
    }

    /**
     * Fetch a unique record that has <code>portal_id = value</code>
     */
    public cn.edu.nju.teamwiki.jooq.tables.pojos.Portal fetchOneByPortalId(Integer value) {
        return fetchOne(Portal.PORTAL.PORTAL_ID, value);
    }

    /**
     * Fetch records that have <code>portal_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Portal> fetchRangeOfPortalName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Portal.PORTAL.PORTAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>portal_name IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Portal> fetchByPortalName(String... values) {
        return fetch(Portal.PORTAL.PORTAL_NAME, values);
    }

    /**
     * Fetch records that have <code>portal_link BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Portal> fetchRangeOfPortalLink(String lowerInclusive, String upperInclusive) {
        return fetchRange(Portal.PORTAL.PORTAL_LINK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>portal_link IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Portal> fetchByPortalLink(String... values) {
        return fetch(Portal.PORTAL.PORTAL_LINK, values);
    }
}
