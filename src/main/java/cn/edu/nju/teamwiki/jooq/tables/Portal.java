/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables;


import cn.edu.nju.teamwiki.jooq.Indexes;
import cn.edu.nju.teamwiki.jooq.Keys;
import cn.edu.nju.teamwiki.jooq.TeamWiki;
import cn.edu.nju.teamwiki.jooq.tables.records.PortalRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Portal extends TableImpl<PortalRecord> {

    private static final long serialVersionUID = -292039900;

    /**
     * The reference instance of <code>team_wiki.portal</code>
     */
    public static final Portal PORTAL = new Portal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PortalRecord> getRecordType() {
        return PortalRecord.class;
    }

    /**
     * The column <code>team_wiki.portal.portal_id</code>.
     */
    public final TableField<PortalRecord, Integer> PORTAL_ID = createField(DSL.name("portal_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>team_wiki.portal.portal_name</code>.
     */
    public final TableField<PortalRecord, String> PORTAL_NAME = createField(DSL.name("portal_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>team_wiki.portal.portal_link</code>.
     */
    public final TableField<PortalRecord, String> PORTAL_LINK = createField(DSL.name("portal_link"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>team_wiki.portal</code> table reference
     */
    public Portal() {
        this(DSL.name("portal"), null);
    }

    /**
     * Create an aliased <code>team_wiki.portal</code> table reference
     */
    public Portal(String alias) {
        this(DSL.name(alias), PORTAL);
    }

    /**
     * Create an aliased <code>team_wiki.portal</code> table reference
     */
    public Portal(Name alias) {
        this(alias, PORTAL);
    }

    private Portal(Name alias, Table<PortalRecord> aliased) {
        this(alias, aliased, null);
    }

    private Portal(Name alias, Table<PortalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Portal(Table<O> child, ForeignKey<O, PortalRecord> key) {
        super(child, key, PORTAL);
    }

    @Override
    public Schema getSchema() {
        return TeamWiki.TEAM_WIKI;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PORTAL_PORTAL_ID, Indexes.PORTAL_PRIMARY);
    }

    @Override
    public Identity<PortalRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PORTAL;
    }

    @Override
    public UniqueKey<PortalRecord> getPrimaryKey() {
        return Keys.KEY_PORTAL_PRIMARY;
    }

    @Override
    public List<UniqueKey<PortalRecord>> getKeys() {
        return Arrays.<UniqueKey<PortalRecord>>asList(Keys.KEY_PORTAL_PRIMARY, Keys.KEY_PORTAL_PORTAL_ID);
    }

    @Override
    public Portal as(String alias) {
        return new Portal(DSL.name(alias), this);
    }

    @Override
    public Portal as(Name alias) {
        return new Portal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Portal rename(String name) {
        return new Portal(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Portal rename(Name name) {
        return new Portal(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
