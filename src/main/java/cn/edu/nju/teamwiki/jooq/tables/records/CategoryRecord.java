/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.records;


import cn.edu.nju.teamwiki.jooq.tables.Category;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryRecord extends UpdatableRecordImpl<CategoryRecord> implements Record3<Integer, String, Boolean> {

    private static final long serialVersionUID = -115395033;

    /**
     * Setter for <code>team_wiki.category.category_id</code>.
     */
    public void setCategoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>team_wiki.category.category_id</code>.
     */
    public Integer getCategoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>team_wiki.category.category_name</code>.
     */
    public void setCategoryName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>team_wiki.category.category_name</code>.
     */
    public String getCategoryName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>team_wiki.category.predefined</code>.
     */
    public void setPredefined(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>team_wiki.category.predefined</code>.
     */
    public Boolean getPredefined() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Boolean> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Category.CATEGORY.CATEGORY_ID;
    }

    @Override
    public Field<String> field2() {
        return Category.CATEGORY.CATEGORY_NAME;
    }

    @Override
    public Field<Boolean> field3() {
        return Category.CATEGORY.PREDEFINED;
    }

    @Override
    public Integer component1() {
        return getCategoryId();
    }

    @Override
    public String component2() {
        return getCategoryName();
    }

    @Override
    public Boolean component3() {
        return getPredefined();
    }

    @Override
    public Integer value1() {
        return getCategoryId();
    }

    @Override
    public String value2() {
        return getCategoryName();
    }

    @Override
    public Boolean value3() {
        return getPredefined();
    }

    @Override
    public CategoryRecord value1(Integer value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public CategoryRecord value2(String value) {
        setCategoryName(value);
        return this;
    }

    @Override
    public CategoryRecord value3(Boolean value) {
        setPredefined(value);
        return this;
    }

    @Override
    public CategoryRecord values(Integer value1, String value2, Boolean value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryRecord
     */
    public CategoryRecord() {
        super(Category.CATEGORY);
    }

    /**
     * Create a detached, initialised CategoryRecord
     */
    public CategoryRecord(Integer categoryId, String categoryName, Boolean predefined) {
        super(Category.CATEGORY);

        set(0, categoryId);
        set(1, categoryName);
        set(2, predefined);
    }
}
