/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.daos;


import cn.edu.nju.teamwiki.jooq.tables.Role;
import cn.edu.nju.teamwiki.jooq.tables.records.RoleRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * A table to contain all roles
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleDao extends DAOImpl<RoleRecord, cn.edu.nju.teamwiki.jooq.tables.pojos.Role, Integer> {

    /**
     * Create a new RoleDao without any configuration
     */
    public RoleDao() {
        super(Role.ROLE, cn.edu.nju.teamwiki.jooq.tables.pojos.Role.class);
    }

    /**
     * Create a new RoleDao with an attached configuration
     */
    public RoleDao(Configuration configuration) {
        super(Role.ROLE, cn.edu.nju.teamwiki.jooq.tables.pojos.Role.class, configuration);
    }

    @Override
    public Integer getId(cn.edu.nju.teamwiki.jooq.tables.pojos.Role object) {
        return object.getRoleId();
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Role> fetchRangeOfRoleId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Role> fetchByRoleId(Integer... values) {
        return fetch(Role.ROLE.ROLE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>role_id = value</code>
     */
    public cn.edu.nju.teamwiki.jooq.tables.pojos.Role fetchOneByRoleId(Integer value) {
        return fetchOne(Role.ROLE.ROLE_ID, value);
    }

    /**
     * Fetch records that have <code>role_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Role> fetchRangeOfRoleName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_name IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Role> fetchByRoleName(String... values) {
        return fetch(Role.ROLE.ROLE_NAME, values);
    }
}
