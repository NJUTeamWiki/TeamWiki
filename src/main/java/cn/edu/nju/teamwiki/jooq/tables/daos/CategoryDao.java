/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.daos;


import cn.edu.nju.teamwiki.jooq.tables.Category;
import cn.edu.nju.teamwiki.jooq.tables.records.CategoryRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CategoryDao extends DAOImpl<CategoryRecord, cn.edu.nju.teamwiki.jooq.tables.pojos.Category, Integer> {

    /**
     * Create a new CategoryDao without any configuration
     */
    public CategoryDao() {
        super(Category.CATEGORY, cn.edu.nju.teamwiki.jooq.tables.pojos.Category.class);
    }

    /**
     * Create a new CategoryDao with an attached configuration
     */
    @Autowired
    public CategoryDao(Configuration configuration) {
        super(Category.CATEGORY, cn.edu.nju.teamwiki.jooq.tables.pojos.Category.class, configuration);
    }

    @Override
    public Integer getId(cn.edu.nju.teamwiki.jooq.tables.pojos.Category object) {
        return object.getCategoryId();
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Category> fetchRangeOfCategoryId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Category.CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Category> fetchByCategoryId(Integer... values) {
        return fetch(Category.CATEGORY.CATEGORY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>category_id = value</code>
     */
    public cn.edu.nju.teamwiki.jooq.tables.pojos.Category fetchOneByCategoryId(Integer value) {
        return fetchOne(Category.CATEGORY.CATEGORY_ID, value);
    }

    /**
     * Fetch records that have <code>category_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Category> fetchRangeOfCategoryName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.CATEGORY_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_name IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Category> fetchByCategoryName(String... values) {
        return fetch(Category.CATEGORY.CATEGORY_NAME, values);
    }

    /**
     * Fetch records that have <code>predefined BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Category> fetchRangeOfPredefined(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Category.CATEGORY.PREDEFINED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>predefined IN (values)</code>
     */
    public List<cn.edu.nju.teamwiki.jooq.tables.pojos.Category> fetchByPredefined(Boolean... values) {
        return fetch(Category.CATEGORY.PREDEFINED, values);
    }
}
