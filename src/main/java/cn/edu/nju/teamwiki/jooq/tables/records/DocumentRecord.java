/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.records;


import cn.edu.nju.teamwiki.jooq.tables.Document;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentRecord extends UpdatableRecordImpl<DocumentRecord> implements Record7<String, String, Integer, LocalDateTime, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1007936606;

    /**
     * Setter for <code>team_wiki.document.d_id</code>.
     */
    public void setDId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>team_wiki.document.d_id</code>.
     */
    public String getDId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>team_wiki.document.d_name</code>.
     */
    public void setDName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>team_wiki.document.d_name</code>.
     */
    public String getDName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>team_wiki.document.uploader</code>.
     */
    public void setUploader(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>team_wiki.document.uploader</code>.
     */
    public Integer getUploader() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>team_wiki.document.uploaded_time</code>.
     */
    public void setUploadedTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>team_wiki.document.uploaded_time</code>.
     */
    public LocalDateTime getUploadedTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>team_wiki.document.modified_time</code>.
     */
    public void setModifiedTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>team_wiki.document.modified_time</code>.
     */
    public LocalDateTime getModifiedTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>team_wiki.document.source_type</code>.
     */
    public void setSourceType(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>team_wiki.document.source_type</code>.
     */
    public Integer getSourceType() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>team_wiki.document.source_id</code>.
     */
    public void setSourceId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>team_wiki.document.source_id</code>.
     */
    public Integer getSourceId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, Integer, LocalDateTime, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, Integer, LocalDateTime, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Document.DOCUMENT.D_ID;
    }

    @Override
    public Field<String> field2() {
        return Document.DOCUMENT.D_NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Document.DOCUMENT.UPLOADER;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Document.DOCUMENT.UPLOADED_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Document.DOCUMENT.MODIFIED_TIME;
    }

    @Override
    public Field<Integer> field6() {
        return Document.DOCUMENT.SOURCE_TYPE;
    }

    @Override
    public Field<Integer> field7() {
        return Document.DOCUMENT.SOURCE_ID;
    }

    @Override
    public String component1() {
        return getDId();
    }

    @Override
    public String component2() {
        return getDName();
    }

    @Override
    public Integer component3() {
        return getUploader();
    }

    @Override
    public LocalDateTime component4() {
        return getUploadedTime();
    }

    @Override
    public LocalDateTime component5() {
        return getModifiedTime();
    }

    @Override
    public Integer component6() {
        return getSourceType();
    }

    @Override
    public Integer component7() {
        return getSourceId();
    }

    @Override
    public String value1() {
        return getDId();
    }

    @Override
    public String value2() {
        return getDName();
    }

    @Override
    public Integer value3() {
        return getUploader();
    }

    @Override
    public LocalDateTime value4() {
        return getUploadedTime();
    }

    @Override
    public LocalDateTime value5() {
        return getModifiedTime();
    }

    @Override
    public Integer value6() {
        return getSourceType();
    }

    @Override
    public Integer value7() {
        return getSourceId();
    }

    @Override
    public DocumentRecord value1(String value) {
        setDId(value);
        return this;
    }

    @Override
    public DocumentRecord value2(String value) {
        setDName(value);
        return this;
    }

    @Override
    public DocumentRecord value3(Integer value) {
        setUploader(value);
        return this;
    }

    @Override
    public DocumentRecord value4(LocalDateTime value) {
        setUploadedTime(value);
        return this;
    }

    @Override
    public DocumentRecord value5(LocalDateTime value) {
        setModifiedTime(value);
        return this;
    }

    @Override
    public DocumentRecord value6(Integer value) {
        setSourceType(value);
        return this;
    }

    @Override
    public DocumentRecord value7(Integer value) {
        setSourceId(value);
        return this;
    }

    @Override
    public DocumentRecord values(String value1, String value2, Integer value3, LocalDateTime value4, LocalDateTime value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentRecord
     */
    public DocumentRecord() {
        super(Document.DOCUMENT);
    }

    /**
     * Create a detached, initialised DocumentRecord
     */
    public DocumentRecord(String dId, String dName, Integer uploader, LocalDateTime uploadedTime, LocalDateTime modifiedTime, Integer sourceType, Integer sourceId) {
        super(Document.DOCUMENT);

        set(0, dId);
        set(1, dName);
        set(2, uploader);
        set(3, uploadedTime);
        set(4, modifiedTime);
        set(5, sourceType);
        set(6, sourceId);
    }
}
