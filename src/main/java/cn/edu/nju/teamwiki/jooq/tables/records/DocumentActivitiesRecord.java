/*
 * This file is generated by jOOQ.
 */
package cn.edu.nju.teamwiki.jooq.tables.records;


import cn.edu.nju.teamwiki.jooq.tables.DocumentActivities;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentActivitiesRecord extends UpdatableRecordImpl<DocumentActivitiesRecord> implements Record4<String, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = -425284354;

    /**
     * Setter for <code>team_wiki.document_activities.document_id</code>.
     */
    public void setDocumentId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>team_wiki.document_activities.document_id</code>.
     */
    public String getDocumentId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>team_wiki.document_activities.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>team_wiki.document_activities.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>team_wiki.document_activities.action</code>.
     */
    public void setAction(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>team_wiki.document_activities.action</code>.
     */
    public String getAction() {
        return (String) get(2);
    }

    /**
     * Setter for <code>team_wiki.document_activities.time</code>.
     */
    public void setTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>team_wiki.document_activities.time</code>.
     */
    public LocalDateTime getTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<String, Integer, String, LocalDateTime> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Integer, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DocumentActivities.DOCUMENT_ACTIVITIES.DOCUMENT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return DocumentActivities.DOCUMENT_ACTIVITIES.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return DocumentActivities.DOCUMENT_ACTIVITIES.ACTION;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return DocumentActivities.DOCUMENT_ACTIVITIES.TIME;
    }

    @Override
    public String component1() {
        return getDocumentId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getAction();
    }

    @Override
    public LocalDateTime component4() {
        return getTime();
    }

    @Override
    public String value1() {
        return getDocumentId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getAction();
    }

    @Override
    public LocalDateTime value4() {
        return getTime();
    }

    @Override
    public DocumentActivitiesRecord value1(String value) {
        setDocumentId(value);
        return this;
    }

    @Override
    public DocumentActivitiesRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public DocumentActivitiesRecord value3(String value) {
        setAction(value);
        return this;
    }

    @Override
    public DocumentActivitiesRecord value4(LocalDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    public DocumentActivitiesRecord values(String value1, Integer value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentActivitiesRecord
     */
    public DocumentActivitiesRecord() {
        super(DocumentActivities.DOCUMENT_ACTIVITIES);
    }

    /**
     * Create a detached, initialised DocumentActivitiesRecord
     */
    public DocumentActivitiesRecord(String documentId, Integer userId, String action, LocalDateTime time) {
        super(DocumentActivities.DOCUMENT_ACTIVITIES);

        set(0, documentId);
        set(1, userId);
        set(2, action);
        set(3, time);
    }
}
